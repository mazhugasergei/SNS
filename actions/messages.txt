{messages.map((message, i) => {
						const recent =
							i &&
							message.sender === messages[i - 1].sender &&
							message.createdAt.getTime() - messages[i - 1].createdAt.getTime() < 300000
						const showDate = !i || message.createdAt.getTime() - messages[i - 1].createdAt.getTime() >= 86400000
						return (
							<div className="flex flex-col" key={message._id?.toString()}>
								{showDate && (
									<div className="self-center text-xs font-medium text-center opacity-75 mt-2 mx-auto bg-secondary rounded-sm px-2 py-1">
										{new Date(message.createdAt.getTime()).toLocaleDateString("default", {
											month: "long",
											day: "2-digit",
										})}
									</div>
								)}
								{/* message */}
								<div
									className={`group flex items-center gap-2 ${
										!message.sender ? "flex-row-reverse self-end" : "self-start"
									} ${recent ? "mt-1" : "mt-2"}`}
								>
									{/* pfp */}
									{recent ? (
										<div className="w-7 h-7" />
									) : (
										<Link href={`/`} className="rounded-full hover:brightness-[.85] transition">
											<UserAvatar src={!message.sender ? auth_pfp : chat.image || ""} className="w-7 h-7" />
										</Link>
									)}
									{/* body */}
									<div className="justify-self-start text-xs bg-secondary rounded-md p-2">{message.body}</div>
									{/* time */}
									<div className="cursor-default self-end text-[.5rem] opacity-0 group-hover:opacity-80 transition">
										{new Date(message.createdAt.getTime()).toLocaleTimeString("en-UK", {
											hour: "2-digit",
											minute: "2-digit",
										})}
									</div>
								</div>
							</div>
						)
					})}